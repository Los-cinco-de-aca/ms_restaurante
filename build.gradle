plugins {
	id 'org.springframework.boot' version '2.3.4.RELEASE'
	id 'io.spring.dependency-management' version '1.0.10.RELEASE'
	id 'java'
	id 'jacoco'
	id "org.sonarqube" version "3.0"
}

group = 'co.edu.uniajc'
version = '0.0.1-SNAPSHOT'
sourceCompatibility = '1.8'

sonarqube {
    properties {
        property 'sonar.projectName', 'Example of SonarQube Scanner for Gradle Usage'
    }
}

repositories {
	mavenCentral()
}

dependencies {
	implementation 'org.springframework.boot:spring-boot-starter-actuator'
	implementation 'org.springframework.boot:spring-boot-starter'
	implementation 'org.springframework.boot:spring-boot-starter-security'
	implementation 'org.flywaydb:flyway-core:5.2.4'
	testImplementation('org.springframework.boot:spring-boot-starter-test') {
		exclude group: 'org.junit.vintage', module: 'junit-vintage-engine'
	}
	
	compile 'com.google.code.gson:gson:2.8.0'
	
    compile group: 'org.springframework.boot', name: 'spring-boot-starter-data-rest', version: '2.3.3.RELEASE'

    compile group: 'org.springframework.boot', name: 'spring-boot-starter-data-jpa', version: '2.3.3.RELEASE'

	compile group: 'org.springframework.boot', name: 'spring-boot-starter-web', version: '2.3.3.RELEASE'
    
    compile group: 'io.springfox', name: 'springfox-swagger2', version: '3.0.0'

    compile group: 'io.springfox', name: 'springfox-swagger-ui', version: '2.9.2'
    
    testCompile group: 'junit', name: 'junit', version: '4.13'
    
    compile group: 'org.postgresql', name: 'postgresql', version: '42.2.8'
    
    compile group: 'org.apache.commons', name: 'commons-lang3', version: '3.9'
    
    compile group: 'org.springframework.cloud', name: 'spring-cloud-starter-security', version: '2.1.2.RELEASE'

    compile group: 'org.springframework.boot', name: 'spring-boot-starter-parent', version: '2.1.2.RELEASE', ext: 'pom'
    
    testImplementation 'org.springframework.security:spring-security-test'
    
    compile group: 'io.jsonwebtoken', name: 'jjwt', version: '0.9.1'
    
    
    
    
    
}

test {
	useJUnitPlatform()
}


jacocoTestCoverageVerification {
	violationRules {
		rule {
			limit {
				minimum = 0.2
			}
		}
	}
	
	}
	
	
jacocoTestReport {
    reports {
        xml.enabled true
    }
}
test.finalizedBy jacocoTestReport
tasks['sonarqube'].dependsOn test
